{"version":3,"sources":["services/api.js","services/appointments.js","components/AppointmentsTable.js","services/dentists.js","components/DentistsTable.js","services/patients.js","components/PatientsTable.js","pages/Home.js","components/DentistForm.js","pages/Dentist.js","components/PatientForm.js","pages/Patient.js","components/AppointmentForm.js","pages/Appointment.js","App.js","index.js"],"names":["Api","axios","create","baseURL","appointmentsService","get","then","res","data","catch","err","console","log","post","id","put","delete","AppointmentsTable","appointmentsData","setFetch","history","useHistory","location","useLocation","eliminar","a","deleteAppointmentsById","prev","alert","Row","Col","Button","onClick","pathname","push","Table","striped","bordered","hover","length","map","appointment","index","date","dentist","nombre","patient","colSpan","dentistsService","DentistsTable","dentistsData","deleteDentistsById","apellido","matricula","patientService","PatientsTable","patientsData","deletePatientsById","dni","admissionDate","Home","useState","setDentistsData","setPatientsData","setAppointmentsData","useEffect","getInfoData","getDentists","resDentist","getPatients","resPatient","getAppointments","resAppointment","Container","className","md","DentistForm","loading","setLoading","useForm","register","handleSubmit","onSubmit","postDentists","Form","Group","Label","Control","required","type","placeholder","Spinner","animation","role","Dentist","fetch","PatientForm","event","postPatients","Patient","patientsService","AppointmentForm","patientId","setPatientId","dentistId","setDentistId","find","d","p","postAppointments","value","onChange","e","parseInt","target","selected","disabled","hidden","Appointment","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fc3e15f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst Api = axios.create({baseURL: \"http://localhost:8080\" });\r\n\r\nexport default Api;","import Api from \"./api\";\r\n\r\nconst appointmentsService = {};\r\n\r\nappointmentsService.getAppointments = () => {\r\n    return Api.get(\"/turns/\")\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\nappointmentsService.postAppointments = (data) => {\r\n    console.log(data)\r\n    return Api.post(\"/turns/registrar\", data)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\nappointmentsService.getAppointmentsById = (id) => {\r\n    return Api.get(`/turns/${id}`)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\nappointmentsService.updateAppointmentsById = (id) => {\r\n    return Api.put(`/turns/${id}`)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\nappointmentsService.deleteAppointmentsById = (id) => {\r\n    return Api.delete(`/turns/${id}`)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\nexport default appointmentsService;","import { Col, Row, Table, Button } from \"react-bootstrap\"\r\nimport { useHistory, useLocation } from \"react-router\"\r\nimport appointmentsService from \"../services/appointments\"\r\n\r\n\r\nexport const AppointmentsTable = ({ appointmentsData, setFetch }) => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const handleClick = () => {\r\n        if (location.pathname === \"/\") {\r\n            history.push(\"/turns\")\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n    } \r\n\r\n    const eliminar = async (id) => {\r\n        try {\r\n            await appointmentsService.deleteAppointmentsById(id);\r\n            setFetch(prev => !prev)\r\n            alert(\"El Turno ha sido eliminado\")\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    } \r\n \r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <h2>Turnos</h2>\r\n                </Col>\r\n                <Col>\r\n                    <Button onClick={handleClick}> {location.pathname === \"/\" ? \"Administrar turnos\" : \"Volver a la home\"} </Button>\r\n                </Col>\r\n            </Row>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Fecha</th>\r\n                        <th>Odontologo</th>\r\n                        <th>Paciente</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {appointmentsData.length ? appointmentsData.map((appointment, index) => (\r\n                    <tr key={index}>\r\n                        <td>{appointment.date}</td>\r\n                        <td>{appointment.dentist?.nombre}</td>\r\n                        <td>{appointment.patient?.nombre}</td>\r\n                        <td>\r\n                        <Button onClick={() => eliminar(appointment.id)}>Eliminar</Button>\r\n                        </td>\r\n                    </tr>\r\n                )) : <tr><td colSpan=\"5\">Aún no hay turnos cargados, agrega un turno para verlo en la tabla.</td></tr>}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n} ","import Api from \"./api\";\r\n\r\nconst dentistsService = {};\r\n\r\ndentistsService.getDentists = () => {\r\n    return Api.get(\"/odontologos/\") \r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\ndentistsService.postDentists = (data) => {\r\n    return Api.post(\"/odontologos/registrar\", data)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\ndentistsService.getDentistsById = (id) => {\r\n    return Api.get(`/odontologos/${id}`)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\ndentistsService.updateDentistsById = (id) => {\r\n    return Api.put(`/odontologos/${id}`)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\ndentistsService.deleteDentistsById = (id) => {\r\n    return Api.delete(`/odontologos/${id}`)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\nexport default dentistsService;","import { Table, Button, Row, Col } from \"react-bootstrap\"\r\nimport { useHistory, useLocation } from \"react-router\"\r\nimport dentistsService from \"../services/dentists\";\r\n\r\nexport const DentistsTable = ({ dentistsData, setFetch }) => { \r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const handleClick = () => {\r\n\r\n        if (location.pathname === \"/\") {\r\n            history.push(\"/odontologos\")\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    const eliminar = async (id) => {\r\n        try {\r\n            await dentistsService.deleteDentistsById(id)\r\n            setFetch(prev => !prev)\r\n            alert(\"El Dentista ha sido eliminado\")\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <h2>Odontologos</h2>\r\n                </Col>\r\n                <Col>\r\n                    <Button onClick={handleClick}> {location.pathname === \"/\" ? \"Administrar odontologos\" : \"Volver a la home\"} </Button>\r\n                </Col>\r\n            </Row>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nombre</th>\r\n                        <th>Apellido</th>\r\n                        <th>Matricula</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dentistsData.length ? dentistsData.map((dentist, index) => (\r\n                        <tr key={index}>\r\n                            <td>{dentist.nombre}</td>\r\n                            <td>{dentist.apellido}</td>\r\n                            <td>{dentist.matricula}</td>\r\n                            <td>\r\n                            <Button onClick={() => eliminar(dentist.id)}>Eliminar</Button>\r\n                            </td>\r\n                        </tr>\r\n                    )) : <tr><td colSpan=\"5\">Aún no hay odontologos cargados, agrega un odontologo para verlo en la tabla.</td></tr>}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import Api from \"./api\";\r\n\r\nconst patientService = {};\r\n\r\npatientService.getPatients = () => {\r\n    return Api.get(\"/pacientes/\")\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\npatientService.postPatients = (data) => {\r\n    return Api.post(\"/pacientes/registrar\", data)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\npatientService.getPatientsById = (id) => {\r\n    return Api.get(`/pacientes/${id}`)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\npatientService.updatePatientsById = (id) => {\r\n    return Api.put(`/pacientes/${id}`)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\npatientService.deletePatientsById = (id) => {\r\n    return Api.delete(`/pacientes/${id}`)\r\n    .then(res => res.data)\r\n    .catch(err => {throw err})\r\n}\r\n\r\nexport default patientService;","import { Col, Row, Table, Button } from \"react-bootstrap\"\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport patientService from \"../services/patients\";\r\n\r\nexport const PatientsTable = ({ patientsData, setFetch }) => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const handleClick = () => {\r\n\r\n        if (location.pathname === \"/\") {\r\n            history.push(\"/pacientes\")\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    const eliminar = async (id) => {\r\n        try {\r\n            await patientService.deletePatientsById(id)\r\n            setFetch(prev => !prev)\r\n            alert(\"El Paciente ha sido eliminado\")\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <h2>Pacientes</h2>\r\n                </Col>\r\n                <Col>\r\n                    <Button onClick={handleClick}> {location.pathname === \"/\" ? \"Administrar pacientes\" : \"Volver a la home\"} </Button>\r\n                </Col>\r\n            </Row>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nombre</th>\r\n                        <th>Apellido</th>\r\n                        <th>DNI</th>\r\n                        <th>Fecha Ingreso</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {patientsData.length ? patientsData.map((patient, index) => (\r\n                    <tr key={index}>\r\n                        <td>{patient.nombre}</td>\r\n                        <td>{patient.apellido}</td>\r\n                        <td>{patient.dni}</td>\r\n                        <td>{patient.admissionDate}</td>\r\n                        <td>\r\n                        <Button onClick={() => eliminar(patient.id)}>Eliminar</Button>\r\n                        </td>\r\n                    </tr>\r\n                )) : <tr><td colSpan=\"5\">Aún no hay pacientes cargados, agrega un paciente para verlo en la tabla.</td></tr>}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { AppointmentsTable } from \"../components/AppointmentsTable\";\r\nimport { DentistsTable } from \"../components/DentistsTable\";\r\nimport { PatientsTable } from \"../components/PatientsTable\";\r\nimport appointmentsService from \"../services/appointments\";\r\nimport dentistsService from \"../services/dentists\";\r\nimport patientService from \"../services/patients\";\r\n\r\nfunction Home() {\r\n\r\n  const [dentistsData, setDentistsData] = useState([]);\r\n  const [patientsData, setPatientsData] = useState([]);\r\n  const [appointmentsData, setAppointmentsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getInfoData = async () => {\r\n      try {\r\n        const resDentist = await dentistsService.getDentists();\r\n        const resPatient = await patientService.getPatients();\r\n        const resAppointment = await appointmentsService.getAppointments();\r\n\r\n        console.log(resAppointment)\r\n\r\n        setDentistsData(resDentist);\r\n        setPatientsData(resPatient);\r\n        setAppointmentsData(resAppointment);\r\n\r\n      } catch (err) {\r\n        alert(\"Para recibir y editar los datos, primero debe iniciar el servidor en el puerto 8080\")\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    getInfoData();\r\n  }, [])\r\n\r\n  return (\r\n\r\n    <Container className=\"Home\">\r\n      <Row>\r\n        <Col md={6}>\r\n          <DentistsTable dentistsData={dentistsData} />\r\n          <PatientsTable patientsData={patientsData} />\r\n        </Col>\r\n        <Col md={6}>\r\n          <AppointmentsTable appointmentsData={appointmentsData} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { Col, Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport dentistsService from \"../services/dentists\";\r\n\r\nfunction DentistForm({ setFetch }) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            setLoading(true);\r\n            await dentistsService.postDentists(data)\r\n        } catch (err) {\r\n            console.log(err)\r\n\r\n        }finally{\r\n            setLoading(false);\r\n            setFetch(prev => !prev);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Nombre</Form.Label>\r\n                    <Form.Control\r\n                        {...register('nombre', { required: true })}\r\n                        type=\"text\"\r\n                        placeholder=\"Nombre\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Apellido</Form.Label>\r\n                    <Form.Control\r\n                        {...register('apellido', { required: true })}\r\n                        type=\"text\"\r\n                        placeholder=\"Apellido\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Matricula</Form.Label>\r\n                    <Form.Control\r\n                        {...register('matricula', { required: true })}\r\n                        type=\"number\"\r\n                        placeholder=\"Matricula\"\r\n                    />\r\n                </Form.Group>\r\n            </Col>\r\n\r\n            <Button type=\"submit\">\r\n                {loading ?\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner> :\r\n                    \"Añadir odontólogo\"\r\n                }\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default DentistForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport DentistForm from \"../components/DentistForm\";\r\nimport { DentistsTable } from \"../components/DentistsTable\";\r\nimport dentistsService from \"../services/dentists\";\r\n\r\nfunction Dentist() {\r\n  const [dentistsData, setDentistsData] = useState([]);\r\n  const [fetch, setFetch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getInfoData = async () => {\r\n      try {\r\n        const resDentist = await dentistsService.getDentists();\r\n\r\n        setDentistsData(resDentist);\r\n\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    getInfoData();\r\n  }, [fetch])\r\n\r\n  return (\r\n\r\n    <Container className=\"Dentist\">\r\n      <Row>\r\n        <Col md={6}>\r\n          <DentistsTable dentistsData={dentistsData} />\r\n        </Col>\r\n        \r\n        <Col md={6}>\r\n          <DentistForm setFetch={setFetch} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dentist;\r\n","import { useState } from \"react\";\r\nimport { Col, Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport patientService from \"../services/patients\";\r\n\r\nfunction PatientForm({ setFetch }) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const onSubmit = async (event) => {\r\n        try {\r\n            setLoading(true);\r\n            await patientService.postPatients(event)\r\n        } catch (err) {\r\n            console.log(err)\r\n\r\n        }finally{\r\n            setLoading(false);\r\n            setFetch(prev => !prev);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Nombre</Form.Label>\r\n                    <Form.Control\r\n                        {...register('nombre', { required: true })}\r\n                        type=\"text\"\r\n                        placeholder=\"Nombre\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Apellido</Form.Label>\r\n                    <Form.Control\r\n                        {...register('apellido', { required: true })}\r\n                        type=\"text\"\r\n                        placeholder=\"Apellido\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>DNI</Form.Label>\r\n                    <Form.Control\r\n                        {...register('dni', { required: true })}\r\n                        type=\"text\"\r\n                        placeholder=\"DNI\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Fecha Ingreso</Form.Label>\r\n                    <Form.Control\r\n                        {...register('admissionDate', { required: true })}\r\n                        type=\"date\"\r\n                        placeholder=\"Fecha Ingreso\"\r\n                    />\r\n                </Form.Group>\r\n            </Col>\r\n\r\n            <Button type=\"submit\">\r\n                {loading ?\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner> :\r\n                    \"Añadir paciente\"\r\n                }\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PatientForm;","import { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport PatientForm from \"../components/PatientForm\";\r\nimport { PatientsTable } from \"../components/PatientsTable\";\r\nimport patientsService from \"../services/patients\";\r\n\r\nfunction Patient() {\r\n  const [patientsData, setPatientsData] = useState([]);\r\n  const [fetch, setFetch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getInfoData = async () => {\r\n      try {\r\n        const resPatient = await patientsService.getPatients();\r\n\r\n        setPatientsData(resPatient);\r\n\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    getInfoData();\r\n  }, [fetch])\r\n\r\n  return (\r\n\r\n    <Container className=\"Patient\">\r\n      <Row>\r\n        <Col md={6}>\r\n          <PatientsTable patientsData={patientsData} />\r\n        </Col>\r\n        \r\n        <Col md={6}>\r\n          <PatientForm setFetch={setFetch} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Patient;\r\n\r\n","import { useState } from \"react\";\r\nimport { Col, Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport appointmentsService from \"../services/appointments\";\r\n\r\nfunction AppointmentForm({ setFetch, dentistsData, patientsData }) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const { register, handleSubmit } = useForm();\r\n    const [patientId, setPatientId] = useState();\r\n    const [dentistId, setDentistId] = useState();\r\n\r\n    const onSubmit = async (data) => {\r\n\r\n        if (!patientId && !dentistId) {\r\n            return alert(\"seleccione un odontologo y un paciente para reservar el turno.\")\r\n        }\r\n        data.dentist = dentistsData.find(d => d.id === dentistId)\r\n        data.patient = patientsData.find(p => p.id === patientId)\r\n\r\n        try {\r\n            setLoading(true);\r\n            await appointmentsService.postAppointments(data)\r\n        } catch (err) {\r\n            console.log(err)\r\n\r\n        } finally {\r\n            setLoading(false);\r\n            setFetch(prev => !prev);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Col md={6}>\r\n                <Form.Label>Fecha</Form.Label>\r\n                <Form.Control\r\n                    {...register('date', { required: true })}\r\n                    type=\"datetime-local\"\r\n                    placeholder=\"Fecha\"\r\n                />\r\n                <label>Odontologo\r\n                    <select value={dentistId} placeholder=\"Odontologo\" onChange={e => setDentistId(parseInt(e.target.value))}>\r\n                        <option value=\"\" selected disabled hidden>Seleccione un odontologo</option>\r\n                        {dentistsData.length ? dentistsData.map((dentist, index) => (\r\n                            <option key={index} value={dentist.id}>{dentist.nombre} {dentist.apellido} {dentist.matricula}</option>\r\n                        )) : <option>Aún no hay odontologos cargados, agrega un odontologo para verlo en la tabla.</option>}\r\n                    </select>\r\n                </label>\r\n                <label>Paciente\r\n                    <select value={patientId} placeholder=\"Paciente\" onChange={e => setPatientId(parseInt(e.target.value))}>\r\n                        <option value=\"\" selected disabled hidden>Seleccione un paciente</option>\r\n                        {patientsData.length ? patientsData.map((patient, index) => (\r\n                            <option key={index} value={patient.id}>{patient.nombre} {patient.apellido}</option>\r\n                        )) : <option>Aún no hay pacientes cargados, agrega un paciente para verlo en la tabla.</option>}\r\n                    </select>\r\n                </label>\r\n            </Col>\r\n\r\n            <Button type=\"submit\">\r\n                {loading ?\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner> :\r\n                    \"Reservar turno\"\r\n                }\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default AppointmentForm;","import { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport AppointmentForm from \"../components/AppointmentForm\";\r\nimport { AppointmentsTable } from \"../components/AppointmentsTable\";\r\nimport appointmentsService from \"../services/appointments\";\r\nimport dentistsService from \"../services/dentists\";\r\nimport patientService from \"../services/patients\";\r\n\r\nfunction Appointment() {\r\n  const [dentistsData, setDentistsData] = useState([]);\r\n  const [patientsData, setPatientsData] = useState([]);\r\n  const [appointmentsData, setAppointmentsData] = useState([]);\r\n  const [fetch, setFetch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getInfoData = async () => {\r\n      try {\r\n        const resDentist = await dentistsService.getDentists();\r\n        const resPatient = await patientService.getPatients();\r\n        const resAppointment = await appointmentsService.getAppointments();\r\n\r\n        setDentistsData(resDentist);\r\n        setPatientsData(resPatient);\r\n        setAppointmentsData(resAppointment);\r\n        console.log(resAppointment)\r\n\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n    getInfoData();\r\n  }, [fetch])\r\n\r\n  return (\r\n\r\n    <Container className=\"Appointment\">\r\n      <Row>\r\n        <Col md={6}>\r\n          <AppointmentsTable appointmentsData={appointmentsData} />\r\n        </Col>\r\n        \r\n        <Col md={6}>\r\n          <AppointmentForm dentistsData={dentistsData} patientsData={patientsData} setFetch={setFetch} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Appointment;\r\n\r\n","import './App.css'; import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Home from './pages/Home';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Dentist from './pages/Dentist';\r\nimport Patient from './pages/Patient';\r\nimport Appointment from './pages/Appointment';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/odontologos\">\r\n          <Dentist />\r\n        </Route>\r\n        <Route path=\"/pacientes\">\r\n          <Patient />\r\n        </Route>\r\n        <Route path=\"/turns\">\r\n          <Appointment />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}